/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import type * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_1: THREE.Mesh
    Object_1_1: THREE.Mesh
    Object_1_2: THREE.Mesh
  }
  materials: {
    ['Material.006']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    ['Material.007']: THREE.MeshStandardMaterial
  }
}

export function TestTrack(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/track.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Object_1.geometry} material={materials['Material.006']} />
      <mesh geometry={nodes.Object_1_1.geometry} material={materials['Material.005']} />
      <mesh geometry={nodes.Object_1_2.geometry} material={materials['Material.007']} />
    </group>
  )
}

useGLTF.preload('/models/track.glb')
